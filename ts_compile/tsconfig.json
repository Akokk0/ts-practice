{
    /*
        tsconfig.json是ts编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
        "include" 用来指定哪些ts文件需要被编译
        路径：** 表示任意目录
                 * 表示任意文件
        */
    // 包含哪些文件
    "include": [
        "./src/**/*"
    ],
    // 不需要被编译对文件
    // 默认值：["node_modules", "bower_components", "jspm_packages"]
//    "exclude": [
//        "./src/hello/**/*"
//    ],
    /*// 定义被继承的配置文件
    "extends": "./configs/base"*/
    /*// 指定被编译文件的列表，只有需要编译的文件少时才会用到
    "files": [
        "core.ts",
        "sys.ts",
        "types.ts",
        "scanner.ts",
        "parser.ts",
        "utilities.ts",
        "binder.ts",
        "checker.ts",
        "tsc.ts"
    ]*/
    // 编译选项是配置文件中非常重要也比较复杂的配置选项
    // 在compilerOptions中包含多个子选项，用来完成对编译的配置
    "compilerOptions": {

        // 设置ts代码编译的目标版本，默认值为ES3
        "target": "ES6",

        // module 指定要使用的模块化规范
        "module": "ES6",

        /* lib用来指定项目中要使用的库，一般情况不需要更改
         "lib": []
         outDir 用来指定编译后文件所在的目录*/
        "outDir": "./dist",

        /*将代码合并为一个文件
        默认会将所有的编写在全局作用域中的代码合并为一个js文件
        如果module指定了None、System或AMD则会将模块一起合并到文件之中*/
        // "outFile": "./dist/app.js",

        /*指定代码的根目录
        默认情况下编译后文件的目录结构会以最长的公共目录为根目录
        通过rootDir可以手动指定根目录*/
        // "rootDir": "./src"

        // 是否对js文件进行编译, 默认是false
        "allowJs": true,

        // 是否检查js代码，默认是false
        "checkJs": true,

        // 是否移除注释
        "removeComments": true,

        // 不生成编译后文件
        // "noEmit": true

        // 当有错误时不生成编译后文件
        "noEmitOnError": true,

        /*用来设置编译后的文件是否使用严格模式
         当使用了import等导入模块相当于自动开启了严格模式*/
        "alwaysStrict": true,

        // 不允许隐式any类型
        "noImplicitAny": true,

        // 禁止类型不明确的this
        "noImplicitThis": true,

        // 严格检查空值
        "strictNullChecks": true,

        // 所有严格检查总开关
        "strict": true
    }
}
